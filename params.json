{"name":"Project Euler","tagline":"Project Euler problems solved in various langauges","body":"# PROJECT EULER\r\n<img src=\"http://projecteuler.net/profile/nathanrosspowell.png\" />\r\n\r\nI have been attempting the Project Euler challenges as a learning exercise - \r\nprimarily to enhance my problem solving skills\r\nand secondly to aid in the learning of new programming languages.\r\n\r\n## Languages\r\nCurrently solutions are presented in\r\n\r\n* C++\r\n* Python\r\n* Haskell\r\n* D\r\n* Erlang\r\n* Go\r\n* Javascript\r\n* Rust\r\n\r\n## Installing\r\nThis repo is tested against these versions\r\n\r\n* Ubuntu 12.04 & 11.10\r\n* Python 2.6.6\r\n* GCC 4.4.5\r\n* Clang 2.9\r\n* Glasgow Compiler 6.12.1\r\n* GDC\r\n* Erlang R14B04\r\n* go1\r\n* rhino 1.7\r\n* Rust nightly builds\r\n\r\nCall the bash script `install.bash` to get the needed software.\r\n\r\n## Executing\r\nCompleted problems will be ran by the testing utility and double checked against the correct answer\r\n\r\n    python testing/run.py\r\n\r\nTo filter the testing add a language (or list of them) and a problem number (or list of them)\r\n\r\n    python testing/run.py cpp\r\n    python testing/run.py python\r\n    python testing/run.py cpp python\r\n    python testing/run.py cpp 1\r\n    python testing/run.py cpp 1 2 99 142\r\n    python testing/run.py cpp haskell 1\r\n    python testing/run.py cpp haskell 42 69\r\n\r\n\r\n## Solutions\r\n\r\nNothing here is groundbreaking, super minimal or extremely optimal code.\r\nThe solutions are of the most part coded upto getting the correct answer, then plopped into source control.\r\nIt's the actual completion of the problems that I'm aiming for!\r\n\r\n\r\n## To do\r\n\r\n* Make a seperate list of C solution, move C++ to using as much C++11 features as possible.\r\n* Redo testing to allow for multiple solutions in the same language. (functional and imperative solutions, differnt approaches etc.)\r\n* Have different run methods for languages that have the option to be interpreted and compiled.\r\n* Make and store output data from the testing functionalilty\r\n    * Include stats on the best and worst solutions from each language\r\n    * Include some kind of graphic\r\n    * Make a website with the github pages feature\r\n* Better install code\r\n* Languages to add:\r\n    *  Split C and C++ - makes C++ use C++11 features\r\n    *  Nimrod - seems interesting\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}